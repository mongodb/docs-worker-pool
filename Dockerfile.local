FROM arm64v8/ubuntu:20.04
ARG NPM_BASE_64_AUTH
ARG NPM_EMAIL
ARG SNOOTY_PARSER_VERSION=0.15.0
ARG SNOOTY_FRONTEND_VERSION=0.15.1.1b
ARG MUT_VERSION=0.10.7
ARG REDOC_CLI_VERSION=1.2.2
ARG NPM_BASE_64_AUTH
ARG NPM_EMAIL
ENV DEBIAN_FRONTEND=noninteractive

# helper libraries for docs builds
RUN apt-get update && apt-get install -y vim git unzip zip

# get node 18
# https://gist.github.com/RinatMullayanov/89687a102e696b1d4cab
RUN apt-get install --yes curl
RUN curl --location https://deb.nodesource.com/setup_18.x | bash -
RUN apt-get install --yes nodejs
RUN apt-get install --yes build-essential
RUN apt-get install --yes python3-pip libxml2-dev libxslt-dev python-dev pkg-config

WORKDIR /app

RUN python3 -m pip install poetry

# install snooty parser
RUN git clone -b v${SNOOTY_PARSER_VERSION} --depth 1 https://github.com/mongodb/snooty-parser.git \
    && cd snooty-parser \
    && python3 -m poetry install \
    && make package \
    && mv dist/snooty /opt/

# install mut

RUN git clone -b v${MUT_VERSION} --depth 1 https://github.com/mongodb/mut.git \
    && cd mut \
    && python3 -m poetry install \
    && make package \
    && mv dist/mut /opt/

RUN curl  -L -o redoc.zip https://github.com/mongodb-forks/redoc/archive/refs/tags/v${REDOC_CLI_VERSION}.zip \
    && unzip redoc.zip \
    && mv redoc-${REDOC_CLI_VERSION} redoc/ 

ENV PATH="${PATH}:/opt/snooty:/opt/mut:/app/.local/bin"

# setup user and root directory
RUN useradd -ms /bin/bash docsworker
RUN chmod 755 -R /app
RUN chown -Rv docsworker /app
USER docsworker

# install snooty frontend and docs-tools
RUN git clone -b v${SNOOTY_FRONTEND_VERSION} --depth 1 https://github.com/mongodb/snooty.git       \
    && cd snooty                                                                                   \
    && npm ci --legacy-peer-deps --omit=dev                                                        

RUN mkdir -p modules/persistence && chmod 755 modules/persistence
COPY modules/persistence/package*.json ./modules/persistence/
RUN cd ./modules/persistence \
    && npm ci --legacy-peer-deps 

RUN  mkdir -p modules/oas-page-builder && chmod 755 modules/oas-page-builder
COPY modules/oas-page-builder/package*.json ./modules/oas-page-builder/
RUN cd ./modules/oas-page-builder \
    && npm ci --legacy-peer-deps 

# Root project build
COPY package*.json ./
RUN npm ci --legacy-peer-deps
# Build persistence module

COPY --chown=docsworker modules/persistence/tsconfig*.json ./modules/persistence
COPY --chown=docsworker modules/persistence/src ./modules/persistence/src/
COPY --chown=docsworker modules/persistence/index.ts ./modules/persistence

RUN cd ./modules/persistence \
    && npm run build

# Build modules
# OAS Page Builder
COPY --chown=docsworker modules/oas-page-builder/tsconfig*.json ./modules/oas-page-builder
COPY --chown=docsworker modules/oas-page-builder/src ./modules/oas-page-builder/src/
COPY --chown=docsworker modules/oas-page-builder/index.ts ./modules/oas-page-builder

RUN cd ./modules/oas-page-builder \
    && npm run build

COPY tsconfig*.json ./
COPY config config/
COPY api api/
COPY src src/

RUN npm run build:esbuild

RUN mkdir repos && chmod 755 repos

EXPOSE 3000

CMD ["node", "--enable-source-maps", "dist/entrypoints/localApp.js"]