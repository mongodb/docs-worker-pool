GIT_BRANCH=$(shell git rev-parse --abbrev-ref HEAD)
USER=$(shell whoami)
STAGING_URL="https://docs-mongodborg-staging.corp.mongodb.com"
PRODUCTION_URL="https://docs.mongodb.com"
STAGING_BUCKET=docs-mongodb-org-staging
PRODUCTION_BUCKET=docs-atlas-osb-prod
PROJECT=atlas-open-service-broker
MUT_PREFIX ?= $(PROJECT)
REPO_DIR=$(shell pwd)

COMMIT_HASH=$(shell git rev-parse --short HEAD)

SNOOTY_DB_USR = $(shell printenv MONGO_ATLAS_USERNAME)
SNOOTY_DB_PWD = $(shell printenv MONGO_ATLAS_PASSWORD)


next-gen-html:
	# snooty parse and then build-front-end
	@-echo ${SNOOTY_DB_PWD} | snooty build "${REPO_DIR}" "mongodb+srv://${SNOOTY_DB_USR}:@cluster0-ylwlz.mongodb.net/snooty?retryWrites=true" --commit "${COMMIT_HASH}"; \
	if [ $$? -eq 1]; then \
		exit 1; \
			else \
				exit 0; \
			fi

	rsync -az --exclude '.git' ${REPO_DIR}/../../snooty ${REPO_DIR};
	cp ${REPO_DIR}/.env.production ${REPO_DIR}/snooty;
	cd snooty; \
	echo "GATSBY_SITE=${PROJECT}" >> .env.production; \
	echo "COMMIT_HASH=${COMMIT_HASH}" >> .env.production; \
	npm run build; \
	cp -r "${REPO_DIR}/snooty/public" ${REPO_DIR};

next-gen-stage: ## Host online for review
	mut-publish public ${STAGING_BUCKET} --prefix="${COMMIT_HASH}/${MUT_PREFIX}" --stage ${ARGS};
	echo "Hosted at ${STAGING_URL}/${COMMIT_HASH}/${MUT_PREFIX}/${USER}/${GIT_BRANCH}/";

next-gen-deploy:
	if [ ${GIT_BRANCH} = master ]; then mut-redirects config/redirects -o public/.htaccess; fi	
	@yes | mut-publish public ${PRODUCTION_BUCKET} --prefix="${MUT_PREFIX}" --deploy --deployed-url-prefix=https://docs.mongodb.com --json --all-subdirectories ${ARGS};
	@echo "Hosted at ${PRODUCTION_URL}/${MUT_PREFIX}/index.html";
	$(MAKE) next-gen-deploy-search-index

## Update the search index for this branch
next-gen-deploy-search-index:
	@echo "Building search index"
	mut-index upload public -o ${MANIFEST_PREFIX}.json -u ${PRODUCTION_URL}/${MUT_PREFIX} -s ${GLOBAL_SEARCH_FLAG}
