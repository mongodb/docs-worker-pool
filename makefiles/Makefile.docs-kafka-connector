GIT_BRANCH=$(shell git rev-parse --abbrev-ref HEAD)
USER=$(shell whoami)
STAGING_URL="https://docs-mongodborg-staging.corp.mongodb.com"
PRODUCTION_URL="https://docs.mongodb.com"
STAGING_BUCKET=docs-mongodb-org-staging
PRODUCTION_BUCKET=docs-kafka-connector-prod
PROJECT=kafka-connector
REPO_DIR=$(shell pwd)

SNOOTY_DB_USR = $(shell printenv MONGO_ATLAS_USERNAME)
SNOOTY_DB_PWD = $(shell printenv MONGO_ATLAS_PASSWORD)

# Parse our published-branches configuration file to get the name of
# the current "stable" branch. This is weird and dumb, yes.
STABLE_BRANCH=`grep 'manual' build/docs-tools/data/${PREFIX}-published-branches.yaml | cut -d ':' -f 2 | grep -Eo '[0-9a-z.]+'`

# Informs make that these are not file names and that they are a recipe below
.PHONY: html help stage fake-deploy deploy deploy-search-index check-redirects

next-gen-html:
	# snooty parse and then build-front-end
	@echo ${SNOOTY_DB_PWD} | snooty build "${REPO_DIR}" "mongodb+srv://${SNOOTY_DB_USR}:@cluster0-ylwlz.mongodb.net/snooty?retryWrites=true"; \
	if [ $$? -eq 1 ]; then \
		exit 1; \
	else \
		exit 0; \
	fi
	rsync -az --exclude '.git' ${REPO_DIR}/../../snooty ${REPO_DIR}; 
	cp ${REPO_DIR}/.env.production ${REPO_DIR}/snooty; 
	cd snooty; \
	echo "GATSBY_SITE=${PROJECT}" >> .env.production; \
	npm run build; \
	cp -r "${REPO_DIR}/snooty/public" ${REPO_DIR};
  
next-gen-stage: ## Host online for review
	if [ $(filter-out $@,$(MAKECMDGOALS)) ]; then \
		mut-publish public ${STAGING_BUCKET} --prefix="$(filter-out $@,$(MAKECMDGOALS))" --stage ${ARGS}; \
		echo "Hosted at ${STAGING_URL}/$(filter-out $@,$(MAKECMDGOALS))/${USER}/${GIT_BRANCH}/"; \
	else \
		mut-publish public ${STAGING_BUCKET} --prefix="${PROJECT}" --stage ${ARGS}; \
		echo "Hosted at ${STAGING_URL}/${PROJECT}/${USER}/${GIT_BRANCH}/"; \
	fi
%:
	@:

get-build-dependencies: 
	curl https://raw.githubusercontent.com/mongodb/docs-worker-pool/meta/publishedbranches/docs-kafka-connector.yaml > ${REPO_DIR}/published-branches.yaml

next-gen-deploy:
	if [ ${GIT_BRANCH} = master ]; then mut-redirects config/redirects -o public/.htaccess; fi
	yes | mut-publish public ${PRODUCTION_BUCKET} --prefix="$(filter-out $@,$(MAKECMDGOALS))" --deploy --deployed-url-prefix=https://docs.mongodb.com --json --all-subdirectories ${ARGS};
	@echo "Hosted at ${PRODUCTION_URL}/$(filter-out $@,$(MAKECMDGOALS))/index.html";
	$(MAKE) deploy-search-index
%:
	@:

deploy-search-index: ## Update the search index for this branch
	@echo "Building search index"
	mut-index upload public -o ${PROJECT}-${GIT_BRANCH}.json -u ${PRODUCTION_URL}/${PROJECT}/${GIT_BRANCH} -s; \
