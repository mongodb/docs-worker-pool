GIT_BRANCH=$(shell git rev-parse --abbrev-ref HEAD)

ifeq ($(STAGING_USERNAME),)
	USER=$(shell whoami)
else
	USER=$(STAGING_USERNAME)
endif

REPO_DIR=$(shell pwd)

PROJECT=mongocli
MUT_PREFIX ?= $(PROJECT)

SNOOTY_DB_USR = $(shell printenv MONGO_ATLAS_USERNAME)
SNOOTY_DB_PWD = $(shell printenv MONGO_ATLAS_PASSWORD)

# Necessary to add the fetch-submodule dependency
PUSHLESS_DEPLOY_SHARED_DISABLED=true

include ~/shared.mk

next-gen-parse: fetch-submodule
	# snooty parse -- separated from front-end to support index gen
	@if [ -n "${PATCH_ID}" ]; then \
		snooty build "${REPO_DIR}" --output "${BUNDLE_PATH}" --commit "${COMMIT_HASH}" ${PATCH_CLAUSE} ${RSTSPEC_FLAG}; \
		if [ $$? -eq 1 ]; then \
			exit 1; \
		else \
			exit 0; \
		fi \
	else \
		snooty build "${REPO_DIR}" --output "${BUNDLE_PATH}" ${RSTSPEC_FLAG}; \
		if [ $$? -eq 1 ]; then \
			exit 1; \
		else \
			exit 0; \
		fi \
	fi

next-gen-html:
	# persistence module - add bundle zip to Atlas documents
	# ignore errors "-" flag
	-node --unhandled-rejections=strict ${PERSISTENCE_MODULE_PATH} --path ${BUNDLE_PATH}
	# build-front-end after running parse commands
	rsync -az --exclude '.git' "${REPO_DIR}/../../snooty" "${REPO_DIR}"
	cp ${REPO_DIR}/.env.production ${REPO_DIR}/snooty;
	cd snooty; \
	echo "GATSBY_SITE=${PROJECT}" >> .env.production; \
	if [ -n "${PATCH_ID}" ]; then \
		echo "COMMIT_HASH=${COMMIT_HASH}" >> .env.production && \
		echo "PATCH_ID=${PATCH_ID}" >> .env.production; \
	fi && \
	GATSBY_MANIFEST_PATH="${BUNDLE_PATH}" npm run build; \
	cp -r "${REPO_DIR}/snooty/public" ${REPO_DIR};

next-gen-stage: ## Host online for review
	# stagel local jobs \
	if [ -n "${PATCH_ID}" -a "${MUT_PREFIX}" = "${PROJECT}" ]; then \
		mut-publish public ${BUCKET} --prefix="${COMMIT_HASH}/${PATCH_ID}/${MUT_PREFIX}" --stage ${ARGS}; \
		echo "Hosted at ${URL}/${COMMIT_HASH}/${PATCH_ID}/${MUT_PREFIX}/${USER}/${GIT_BRANCH}/"; \
	# stagel commit jobs and regular git push jobs\
	else \
		mut-publish public ${BUCKET} --prefix="${MUT_PREFIX}" --stage ${ARGS}; \
		echo "Hosted at ${URL}/${MUT_PREFIX}/${USER}/${GIT_BRANCH}/"; \
	fi

get-build-dependencies:
	@curl https://raw.githubusercontent.com/mongodb/docs-worker-pool/meta/publishedbranches/docs-mongocli.yaml > ${REPO_DIR}/published-branches.yaml

fetch-submodule:
	git submodule update --init
